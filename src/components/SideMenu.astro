---
interface Props {
  id?: string;
  class?: string;
}
---

<button data-side-menu-button {...Astro.props}>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    fill="currentColor"
    class="bi bi-list"
    viewBox="0 0 16 16"
  >
    <path
      fill-rule="evenodd"
      d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z"
    ></path>
  </svg>
</button>

<aside data-side-menu>
  <h3 class="tituloGradiente"><a href="/">Commandee</a></h3>
  <hr />

  <nav>
    <ul>
      <li><a href="/contato"><img src="envelope.svg" alt="" />Contato</a></li>
      <li><a href="/sobre"><img src="info-circle.svg" alt="" /> Sobre</a></li>
      <li>
        <a href="/download">
          <img src="file-arrow-down.svg" alt="" /> Download</a>
      </li>
      <li><a href="/profile"> <img src="person.svg" alt="" /> Perfil</a></li>
    </ul>
  </nav>

  <span class="login"><a href="/login">Login</a></span>
</aside>

<div class="backdrop"></div>

<style>
  aside {
    position: absolute;
    top: 0;
    width: 50dvw;
    height: 100dvh;
    transition: all 1s;
    z-index: 100;

    display: flex;
    flex-direction: column;
  }

  aside:not([data-open]) {
    left: -50dvw;
    visibility: hidden;
    opacity: 0;
  }

  .backdrop {
    position: absolute;
    top: 0;
    left: 0;
    width: 100dvw;
    height: 100dvh;
    background-color: transparent;
    backdrop-filter: blur(2.5px);
    z-index: 99;
  }

  aside:not([data-open]) ~ .backdrop {
    visibility: hidden;
  }

  aside[data-open] ~ .backdrop {
    visibility: visible;
  }

  aside[data-open] {
    left: 0;
    visibility: visible;
    opacity: 1;
    background-color: var(--background);
  }

  h3 {
    margin: 0.8rem 0.5rem !important;
  }

  ul {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  li {
    color: var(--textodark);
    font-weight: 500;
    padding: 0.7rem 0.5rem;
    margin: 5px;
    border-radius: 10px;
    transition: all 0.2s;
  }

  li:first-of-type {
    margin-top: 15px;
  }

  li:hover {
    color: var(--primary);
    background-color: var(--secondary);
  }

  li a {
    display: flex;
    align-items: center;
  }

  li img {
    width: 1.2rem;
    margin-right: 0.5rem;
    color: var(--textodark);
  }

  .login {
    margin-top: auto;

    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bolder;
    text-transform: uppercase;
    text-align: center;
    height: 4rem;
    color: var(--textolight);
    background: var(--gradient);
  }

  button svg {
    aspect-ratio: 1 / 1;
    width: 1.5rem;
    color: var(--textodark);
  }

  span {
  }
</style>

<script>
  const aside = document.querySelector<HTMLElement>("[data-side-menu]")!;
  const button = document.querySelector<HTMLElement>(
    "[data-side-menu-button]"
  )!;
  const backdrop = document.querySelector<HTMLElement>(".backdrop")!;

  function openMenu() {
    aside.dataset.open = "";
    document.body.addEventListener("keydown", escClose);

    document.body.style.overflowY = "hidden";
  }

  function closeMenu() {
    delete aside.dataset.open;
    document.body.removeEventListener("keydown", escClose);

    document.body.style.overflowY = "auto";
  }

  function escClose(event: KeyboardEvent) {
    if (event.key === "Escape") closeMenu();
  }

  button.addEventListener("click", openMenu);
  backdrop.addEventListener("click", closeMenu);
</script>
